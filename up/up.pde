
import pbox2d.*;
import org.jbox2d.common.*;
import org.jbox2d.dynamics.*;
import org.jbox2d.dynamics.joints.*;
import org.jbox2d.dynamics.contacts.*;
import org.jbox2d.collision.shapes.*;
import org.jbox2d.collision.shapes.Shape;

PBox2D box2d;

ArrayList<Balloon> balloons;
ArrayList<House> houses;
ArrayList<Cloud> clouds;
Ground ground;

// Colors
color colorSky = color(205, 255, 255);
PImage imgCloud;
PImage imgFence;

// For TEST
boolean bTest = true;
int count = 0;
// these numbers are generated by random
// use only for test
String[] callerTest = {
  "6466053083", "4050281119", "2063797438", "9174924025", "9497034933", 
  "8589782612", "7182168454", "4013253483", "3474704740", "3129514554", 
  "5873700264", "7187152612", "9583948955", "9177516309", "6463478387", 
  "9176288545", "9843740969", "9092319403", "9178479636", "7359742558"
};

void setup() {
  
  size(700,700);
    
  audioSetup();
  
  PFont myFont = createFont("Helvetica", 12);
  textFont(myFont);
  smooth();
  noStroke();

  if(bTest == false)  
    newTinyphoneClient();

  box2d = new PBox2D(this);
  box2d.createWorld();
  box2d.setGravity(0, -9.8);

  balloons = new ArrayList<Balloon>();
  houses = new ArrayList<House>();
  clouds = new ArrayList<Cloud>();
  
  ground = new Ground(width/2, height-groundHeight, width, 2);
  House house = new House(width/2, height-groundHeight-houseHeight+chimneyHeight/2);  
  houses.add(house);

  float posX = random(width/8,width/8*3);
  imgCloud = loadImage("cloud1.png");
  
  for(int i=0; i<numClouds; i++) { 
    Cloud cloud = new Cloud(imgCloud, random(width/20, width/20*19), random(height/20, height/6), random(cloudMin,cloudMax));
    clouds.add(cloud);
  }

  imgFence = loadImage("fence.png");  
}

void draw() {
  background(255);

  box2d.step();

  rectMode(CENTER);
  drawBackground();  

  ground.display();
  
  drawBalloons();

  House lastHouse = houses.get(houses.size()-1);
  if (lastHouse.update()) {
    houses.remove(houses.size()-1);
    
    // create a new house
    House house = new House(width/2, height-groundHeight-houseHeight+chimneyHeight/2);
    houses.add(house);
  }

  for (House h : houses) { 
    h.display();
    float m = h.body.getMass();
  }

  drawCloud();
  imageMode(CORNER);  
  image(imgFence,0, height-117, width, 117);
}

void drawBackground() {
  fill(colorSky);
  rect(width/2, (height-groundHeight)/2, width, height-groundHeight);
  noFill();
}

void drawBalloons() { 
  if (bTest) {   
    for (int i=0; i<balloons.size(); i++) {
      Balloon b = balloons.get(i);
      int strength = maxRadius * maxRadius / 4;
      Vec2 force = new Vec2(0, strength);
      b.applyForce(force);
      b.display();
    }
    return;
  }

  synchronized(callers) {  
    int amountAir = 0;
    if(balloons.size() <= 0)
      return;
    for (int i=balloons.size()-1; i>=0; i--) {
      Balloon b = balloons.get(i);
      if(b.lifetime <= millis() && b.bHangup==true) {
         balloons.remove(i);
         println("balloon is removed " + i);
      }
      else {
        int strength = maxRadius * maxRadius / 4;
        Vec2 force = new Vec2(0, strength);
        b.applyForce(force);
        b.display();
      }
    }
  }
}

void drawCloud() {
  for (Cloud c: clouds) {
    c.update();
    c.display();
  }
}

// for test
void mousePressed() {
  if (bTest == false)
    return;

  if (count >= callerTest.length)
    return;

  Caller caller = new Caller("123456789", callerTest[count]);
  callers.add(caller);  
  count++;
}

